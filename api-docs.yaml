info:
  title: Administration and Accounting API
  description: API for managing alerts and providers in the system
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /GET/alertas:
    get:
      summary: Get all alerts
      description: Retrieve a list of all active alerts in the system
      responses:
        '200':
          description: List of alerts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alertas activas encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        mensaje:
                          type: string
                        estado:
                          type: boolean
        '404':
          description: No active alerts found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay alertas activas"

  /GET/alertas/{id}:
    get:
      summary: Get alert by ID
      description: Retrieve a specific alert by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alert found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  mensaje:
                    type: string
                  estado:
                    type: boolean
                  servicio:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
        '404':
          description: Alert not found

  /POST/alertas/tienda_de_conveniencia:
    post:
      summary: Create convenience store alert
      description: Create a new alert for the convenience store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
      responses:
        '201':
          description: Alert created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object

  /POST/alertas/gasolinera:
    post:
      summary: Create gas station alert
      description: Create a new alert for the gas station
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
      responses:
        '201':
          description: Alert created successfully

  /POST/alertas/repuestos:
    post:
      summary: Create spare parts alert
      description: Create a new alert for spare parts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
      responses:
        '201':
          description: Alert created successfully

  /POST/alertas/pintura:
    post:
      summary: Create painting service alert
      description: Create a new alert for the painting service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
      responses:
        '201':
          description: Alert created successfully

  /PATCH/alertas/{id}:
    patch:
      summary: Delete alert
      description: Mark an alert as deleted (inactive)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alert deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta eliminada correctamente"

  /GET/proveedores:
    get:
      summary: Get all providers
      description: Retrieve a list of all active providers
      responses:
        '200':
          description: List of providers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedores activos encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
        '404':
          description: No active providers found

  /GET/proveedores/{id}:
    get:
      summary: Get provider by ID
      description: Retrieve a specific provider by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Provider found successfully
        '404':
          description: Provider not found

  /POST/proveedores:
    post:
      summary: Create provider
      description: Create a new provider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Provider created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor creado correctamente"
                  data:
                    type: object

  /PUT/proveedores/{id}:
    put:
      summary: Update provider
      description: Update an existing provider
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Provider updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor actualizado correctamente"
                  data:
                    type: object

  /PATCH/proveedores/{id}:
    patch:
      summary: Delete provider
      description: Mark a provider as deleted (inactive)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Provider deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor desactivado correctamente"
