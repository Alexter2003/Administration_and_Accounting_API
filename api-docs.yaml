openapi: 3.0.0
info:
  title: API de Administración y Contabilidad
  description: API para la gestión de alertas y proveedores en el sistema
  version: 1.0.0
info:
  title: API de Administración y Contabilidad
  description: API para la gestión de alertas y proveedores en el sistema
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/administracion
    description: Servidor de desarrollo
paths:
  /GET/alertas:
    get:
      summary: Obtener todas las alertas
      description: Obtiene una lista de todas las alertas activas en el sistema
      responses:
        '200':
          description: Lista de alertas obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alertas activas encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        mensaje:
                          type: string
                        estado:
                          type: boolean
        '404':
          description: No se encontraron alertas activas
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay alertas activas"

  /GET/alertas/{id}:
    get:
      summary: Obtener alerta por ID
      description: Obtiene una alerta específica por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alerta encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  mensaje:
                    type: string
                  estado:
                    type: boolean
                  servicio:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
        '404':
          description: Alerta no encontrada

  /POST/alertas/tienda_de_conveniencia:
    post:
      summary: Crear alerta de tienda de conveniencia
      description: Crea una nueva alerta para la tienda de conveniencia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
                  description: Nombre del producto con bajo stock
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta creada correctamente"
                  data:
                    type: object

  /POST/alertas/gasolinera:
    post:
      summary: Crear alerta de gasolinera
      description: Crea una nueva alerta para la gasolinera
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
                  description: Nombre del producto con bajo stock
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta creada correctamente"
                  data:
                    type: object

  /POST/alertas/repuestos:
    post:
      summary: Crear alerta de repuestos
      description: Crea una nueva alerta para el servicio de repuestos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
                  description: Nombre del producto con bajo stock
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta creada correctamente"
                  data:
                    type: object

  /POST/alertas/pintura:
    post:
      summary: Crear alerta de servicio de pintura
      description: Crea una nueva alerta para el servicio de pintura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre_producto:
                  type: string
                  description: Nombre del producto con bajo stock
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta creada correctamente"
                  data:
                    type: object

  /PATCH/alertas/{id}:
    patch:
      summary: Eliminar alerta
      description: Marca una alerta como eliminada (inactiva)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alerta eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta eliminada correctamente"

  /GET/proveedores:
    get:
      summary: Obtener todos los proveedores
      description: Obtiene una lista de todos los proveedores activos
      responses:
        '200':
          description: Lista de proveedores obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedores activos encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
        '404':
          description: No se encontraron proveedores activos

  /GET/proveedores/{id}:
    get:
      summary: Obtener proveedor por ID
      description: Obtiene un proveedor específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Proveedor encontrado exitosamente
        '404':
          description: Proveedor no encontrado

  /POST/proveedores:
    post:
      summary: Crear proveedor
      description: Crea un nuevo proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Proveedor creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor creado correctamente"
                  data:
                    type: object

  /PUT/proveedores/{id}:
    put:
      summary: Actualizar proveedor
      description: Actualiza un proveedor existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Proveedor actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor actualizado correctamente"
                  data:
                    type: object

  /PATCH/proveedores/{id}:
    patch:
      summary: Eliminar proveedor
      description: Marca un proveedor como eliminado (inactivo)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Proveedor eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor desactivado correctamente"

  /GET/areas:
    get:
      summary: Obtener todas las áreas
      description: Obtiene una lista de todas las áreas activas en el sistema
      responses:
        '200':
          description: Lista de áreas obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Areas activas encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          minLength: 5
                          maxLength: 45
                        descripcion:
                          type: string
                          minLength: 5
                          maxLength: 200
                        estado:
                          type: boolean
        '404':
          description: No se encontraron áreas activas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No hay areas activas"

  /GET/areas/{id}:
    get:
      summary: Obtener área por ID
      description: Obtiene un área específica por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Área encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area encontrada correctamente"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                      descripcion:
                        type: string
                      estado:
                        type: boolean
        '404':
          description: Área no encontrada

  /POST/areas:
    post:
      summary: Crear área
      description: Crea una nueva área en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - descripcion
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
      responses:
        '201':
          description: Área creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area creada correctamente"
                  data:
                    type: object

  /PUT/areas/{id}:
    put:
      summary: Actualizar área
      description: Actualiza un área existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
      responses:
        '200':
          description: Área actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area actualizada correctamente"
                  data:
                    type: object

  /PATCH/areas/{id}:
    patch:
      summary: Eliminar área
      description: Marca un área como eliminada (inactiva)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Área eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area eliminada correctamente"

  /GET/jornadas:
    get:
      summary: Obtener todas las jornadas
      description: Obtiene una lista de todas las jornadas activas en el sistema
      responses:
        '200':
          description: Lista de jornadas obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jornadas activas encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
        '404':
          description: No se encontraron jornadas activas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No hay jornadas activas"

  /GET/jornadas/{id}:
    get:
      summary: Obtener jornada por ID
      description: Obtiene una jornada específica por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Jornada encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jornada encontrada correctamente"
                  data:
                    type: object
        '404':
          description: Jornada no encontrada

  /GET/roles:
    get:
      summary: Obtener todos los roles
      description: Obtiene una lista de todos los roles activos en el sistema
      responses:
        '200':
          description: Lista de roles obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Roles activos encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        descripcion:
                          type: string
                        salario:
                          type: integer
                        id_rol_superior:
                          type: integer
                        estado:
                          type: boolean
        '404':
          description: No se encontraron roles activos

  /GET/roles/{id}:
    get:
      summary: Obtener rol por ID
      description: Obtiene un rol específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rol encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol encontrado correctamente"
                  data:
                    type: object
        '404':
          description: Rol no encontrado

  /POST/roles:
    post:
      summary: Crear rol
      description: Crea un nuevo rol en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - descripcion
                - salario
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
                salario:
                  type: integer
                  minimum: 0
                  maximum: 1000000
                id_rol_superior:
                  type: integer
                  minimum: 1
                  maximum: 1000000
      responses:
        '201':
          description: Rol creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol creado correctamente"
                  data:
                    type: object

  /PUT/roles/{id}:
    put:
      summary: Actualizar rol
      description: Actualiza un rol existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
                salario:
                  type: integer
                  minimum: 0
                  maximum: 1000000
                id_rol_superior:
                  type: integer
                  minimum: 1
                  maximum: 1000000
      responses:
        '200':
          description: Rol actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol actualizado correctamente"
                  data:
                    type: object

  /PATCH/roles/{id}:
    patch:
      summary: Eliminar rol
      description: Marca un rol como eliminado (inactivo)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rol eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol eliminado correctamente"

  /GET/empleados:
    get:
      summary: Obtener todos los empleados
      description: Obtiene una lista de todos los empleados activos en el sistema
      responses:
        '200':
          description: Lista de empleados obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleados activos encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        dpi:
                          type: string
                          pattern: "^[0-9]{13}$"
                        nombres:
                          type: string
                          minLength: 3
                          maxLength: 100
                        apellidos:
                          type: string
                          minLength: 3
                          maxLength: 100
                        telefono:
                          type: string
                          pattern: "^[0-9]{8}$"
                        direccion:
                          type: string
                          minLength: 3
                          maxLength: 255
                        nit:
                          type: string
                        genero:
                          type: boolean
                        id_jornada:
                          type: integer
                        email:
                          type: string
                          format: email
                          minLength: 3
                          maxLength: 100
        '404':
          description: No se encontraron empleados activos

  /GET/empleados/{id}:
    get:
      summary: Obtener empleado por ID
      description: Obtiene un empleado específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Empleado encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado encontrado correctamente"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      dpi:
                        type: string
                      nombres:
                        type: string
                      apellidos:
                        type: string
                      telefono:
                        type: string
                      direccion:
                        type: string
                      nit:
                        type: string
                      genero:
                        type: boolean
                      id_jornada:
                        type: integer
                      email:
                        type: string
        '404':
          description: Empleado no encontrado

  /POST/empleados:
    post:
      summary: Crear empleado
      description: Crea un nuevo empleado en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dpi
                - nombres
                - apellidos
                - telefono
                - direccion
                - nit
                - genero
                - id_jornada
                - email
              properties:
                dpi:
                  type: string
                  pattern: "^[0-9]{13}$"
                nombres:
                  type: string
                  minLength: 3
                  maxLength: 100
                apellidos:
                  type: string
                  minLength: 3
                  maxLength: 100
                telefono:
                  type: string
                  pattern: "^[0-9]{8}$"
                direccion:
                  type: string
                  minLength: 3
                  maxLength: 255
                nit:
                  type: string
                genero:
                  type: boolean
                id_jornada:
                  type: integer
                email:
                  type: string
                  format: email
                  minLength: 3
                  maxLength: 100
      responses:
        '201':
          description: Empleado creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado creado correctamente"
                  data:
                    type: object

  /PUT/empleados/{id}:
    put:
      summary: Actualizar empleado
      description: Actualiza un empleado existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dpi:
                  type: string
                  pattern: "^[0-9]{13}$"
                nombres:
                  type: string
                  minLength: 3
                  maxLength: 100
                apellidos:
                  type: string
                  minLength: 3
                  maxLength: 100
                telefono:
                  type: string
                  pattern: "^[0-9]{8}$"
                direccion:
                  type: string
                  minLength: 3
                  maxLength: 255
                nit:
                  type: string
                genero:
                  type: boolean
                id_jornada:
                  type: integer
                email:
                  type: string
                  format: email
                  minLength: 3
                  maxLength: 100
      responses:
        '200':
          description: Empleado actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado actualizado correctamente"
                  data:
                    type: object

  /PATCH/empleados/{id}:
    patch:
      summary: Eliminar empleado
      description: Marca un empleado como eliminado (inactivo)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Empleado eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado eliminado correctamente"

  /GET/ordenes:
    get:
      summary: Obtener todas las órdenes
      description: Obtiene una lista de todas las órdenes activas en el sistema
      responses:
        '200':
          description: Lista de órdenes obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Órdenes activas encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        id_servicio:
                          type: integer
                        id_estado_orden:
                          type: integer
                          minimum: 1
                          maximum: 4
                        id_proveedor:
                          type: integer
                        fecha_orden:
                          type: string
                          format: date
        '404':
          description: No se encontraron órdenes activas

  /GET/ordenes/{id}:
    get:
      summary: Obtener orden por ID
      description: Obtiene una orden específica por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Orden encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Orden encontrada correctamente"
                  data:
                    type: object
        '404':
          description: Orden no encontrada

  /PUT/ordenes/modificar_estado/{id}:
    put:
      summary: Actualizar estado de orden
      description: Actualiza el estado de una orden existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - estado
              properties:
                estado:
                  type: integer
                  minimum: 1
                  maximum: 4
      responses:
        '200':
          description: Estado de orden actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estado de orden actualizado correctamente"
                  data:
                    type: object

  /PUT/ordenes/detalle/{id}:
    put:
      summary: Actualizar estado de detalle de orden
      description: Actualiza el estado de un detalle específico de una orden
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - estado
              properties:
                estado:
                  type: integer
                  enum: [1, 2, 3]
                cantidad:
                  type: integer
                  minimum: 1
                  description: "Requerido solo cuando estado es 2"
      responses:
        '200':
          description: Estado de detalle actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estado de detalle actualizado correctamente"
                  data:
                    type: object

  /POST/ordenes/reabastecer/{id}:
    post:
      summary: Reabastecer orden
      description: Realiza el reabastecimiento de una orden específica
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Orden reabastecida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Orden reabastecida correctamente"
                  data:
                    type: object

  /GET/servicios:
    get:
      summary: Obtener todos los servicios
      description: Obtiene una lista de todos los servicios activos en el sistema
      responses:
        '200':
          description: Lista de servicios obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Servicios encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          maxLength: 45
                        descripcion:
                          type: string
                          maxLength: 150
                        estado:
                          type: boolean
                          default: true
        '404':
          description: No se encontraron servicios
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay servicios disponibles"

  /GET/servicios/{id}:
    get:
      summary: Obtener servicio por ID
      description: Obtiene un servicio específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Servicio encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Servicio encontrado correctamente"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                        maxLength: 45
                      descripcion:
                        type: string
                        maxLength: 150
                      estado:
                        type: boolean
        '404':
          description: Servicio no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Servicio no encontrado"

  /GET/estados_ordenes_detalles:
    get:
      summary: Obtener todos los estados de detalle
      description: Obtiene una lista de todos los estados posibles para los detalles de órdenes
      responses:
        '200':
          description: Lista de estados de detalle obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estados encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          maxLength: 45
                        descripcion:
                          type: string
                          maxLength: 255
        '404':
          description: No se encontraron estados de detalle
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay estados disponibles"

  /GET/estados_ordenes:
    get:
      summary: Obtener todos los estados de orden
      description: Obtiene una lista de todos los estados posibles para las órdenes
      responses:
        '200':
          description: Lista de estados de orden obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estados encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          maxLength: 45
                        descripcion:
                          type: string
                          maxLength: 255
        '404':
          description: No se encontraron estados de orden
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay estados disponibles"

  /post/login:
    post:
      summary: Iniciar sesión
      description: Autentica un usuario en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Inicio de sesión exitoso"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        type: object
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Credenciales inválidas"

  /post/cambiar-password:
    post:
      summary: Cambiar contraseña
      description: Permite a un usuario cambiar su contraseña actual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                  minLength: 6
                newPassword:
                  type: string
                  minLength: 6
      responses:
        '200':
          description: Contraseña cambiada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Contraseña actualizada correctamente"
        '401':
          description: Contraseña actual incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Contraseña actual incorrecta"

  /post/restablecer-password:
    post:
      summary: Restablecer contraseña
      description: Permite restablecer la contraseña de un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Solicitud de restablecimiento enviada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Se ha enviado un correo con las instrucciones"
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No se encontró un usuario con ese correo"

  /POST/asistencias:
    post:
      summary: Registrar entrada de empleado
      description: Registra la hora de entrada de un empleado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_empleado
                - fecha
                - hora_entrada
              properties:
                id_empleado:
                  type: integer
                fecha:
                  type: string
                  format: date
                hora_entrada:
                  type: string
                  pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                  example: "08:00:00"
      responses:
        '201':
          description: Entrada registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Entrada registrada correctamente"
                  data:
                    type: object
        '400':
          description: Error en los datos proporcionados
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Error en el formato de los datos"

  /PATCH/asistencias/salida:
    patch:
      summary: Registrar salida de empleado
      description: Registra la hora de salida de un empleado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_empleado
                - fecha
                - hora_salida
              properties:
                id_empleado:
                  type: integer
                fecha:
                  type: string
                  format: date
                hora_salida:
                  type: string
                  pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                  example: "17:00:00"
      responses:
        '200':
          description: Salida registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Salida registrada correctamente"
                  data:
                    type: object
        '400':
          description: Error en los datos proporcionados
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Error en el formato de los datos"

  /GET/asistencias/empleado/{id}:
    get:
      summary: Obtener asistencias por empleado
      description: Obtiene el registro de asistencias de un empleado específico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID del empleado
      responses:
        '200':
          description: Asistencias encontradas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Asistencias encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        fecha:
                          type: string
                          format: date
                        hora_entrada:
                          type: string
                        hora_salida:
                          type: string
        '404':
          description: No se encontraron asistencias

  /GET/asistencias:
    get:
      summary: Obtener asistencias por rango de fechas
      description: Obtiene el registro de asistencias dentro de un rango de fechas específico
      parameters:
        - name: fecha_inicio
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha inicial del rango
        - name: fecha_fin
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha final del rango
      responses:
        '200':
          description: Asistencias encontradas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Asistencias encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        id_empleado:
                          type: integer
                        fecha:
                          type: string
                          format: date
                        hora_entrada:
                          type: string
                        hora_salida:
                          type: string
        '404':
          description: No se encontraron asistencias
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No se encontraron asistencias en el rango especificado"

  /GET/movimientos:
    get:
      summary: Obtener todos los movimientos
      description: Obtiene una lista de todos los movimientos
      responses:
        '200':
          description: Lista de movimientos obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movimientos encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        concepto:
                          type: string
                        cantidad:
                          type: number
                        fecha_movimiento:
                          type: string
                          format: date-time

  /GET/movimientos/{id}:
    get:
      summary: Obtener movimiento por ID
      description: Obtiene un movimiento específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movimiento encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movimiento encontrado correctamente"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      concepto:
                        type: string
                      cantidad:
                        type: number
                      fecha_movimiento:
                        type: string
                        format: date-time

  /GET/movimientos/diarios:
    get:
      summary: Obtener movimientos diarios
      description: Obtiene los movimientos de un día específico
      parameters:
        - name: fecha
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Movimientos diarios encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object

  /GET/movimientos/mensuales:
    get:
      summary: Obtener movimientos mensuales
      description: Obtiene los movimientos de un mes específico
      parameters:
        - name: mes
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Movimientos mensuales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object

  /GET/movimientos/trimestrales:
    get:
      summary: Obtener movimientos trimestrales
      description: Obtiene los movimientos de un trimestre específico
      parameters:
        - name: trimestre
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 4
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Movimientos trimestrales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object

  /GET/movimientos/semestrales:
    get:
      summary: Obtener movimientos semestrales
      description: Obtiene los movimientos de un semestre específico
      parameters:
        - name: semestre
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Movimientos semestrales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object

  /GET/movimientos/anuales:
    get:
      summary: Obtener movimientos anuales
      description: Obtiene los movimientos de un año específico
      parameters:
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Movimientos anuales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object

  /POST/pagar-salarios:
    post:
      summary: Pagar salarios
      description: Realiza el pago de salarios a los empleados
      responses:
        '200':
          description: Salarios pagados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Salarios pagados correctamente"
                  data:
                    type: object

  /POST/reembolsos:
    post:
      summary: Crear reembolso
      description: Crea un nuevo reembolso en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - concepto
                - cantidad
                - fecha_movimiento
                - id_servicio
              properties:
                concepto:
                  type: string
                  minLength: 5
                  maxLength: 150
                cantidad:
                  type: number
                  minimum: 0
                fecha_movimiento:
                  type: string
                  format: date-time
                id_servicio:
                  type: integer
      responses:
        '201':
          description: Reembolso creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reembolso creado correctamente"
                  data:
                    type: object

  /GET/estados_ordenes:
    get:
      summary: Obtener estados de orden
      description: Obtiene una lista de todos los estados posibles para las órdenes
      responses:
        '200':
          description: Estados de orden obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estados de orden encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        descripcion:
                          type: string

  /GET/estados_ordenes_detalles:
    get:
      summary: Obtener estados de detalle de orden
      description: Obtiene una lista de todos los estados posibles para los detalles de órdenes
      responses:
        '200':
          description: Estados de detalle obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estados de detalle encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        descripcion:
                          type: string

  /GET/servicios:
    get:
      summary: Obtener servicios
      description: Obtiene una lista de todos los servicios disponibles
      responses:
        '200':
          description: Servicios obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Servicios encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        descripcion:
                          type: string

  /GET/servicios/{id}:
    get:
      summary: Obtener servicio por ID
      description: Obtiene un servicio específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Servicio encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Servicio encontrado correctamente"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                      descripcion:
                        type: string
        '404':
          description: Servicio no encontrado

