openapi: 3.0.0
info:
  title: API de Administración y Contabilidad
  description: API para la gestión de alertas y proveedores en el sistema
  version: 1.0.0
servers:
  - url: http://localhost:3000/administracion
    description: Servidor de desarrollo
paths:
  /GET/areas:
    get:
      summary: Obtener todas las áreas
      description: Obtiene una lista de todas las áreas activas en el sistema
      responses:
        '200':
          description: Lista de áreas obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Areas activas encontradas correctamente"
                  areas:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          minLength: 5
                          maxLength: 45
                        descripcion:
                          type: string
                          minLength: 5
                          maxLength: 200
                        estado:
                          type: boolean
                        id_servicio:
                          type: integer
        '404':
          description: No se encontraron áreas activas
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay areas activas"

  /GET/areas/{id}:
    get:
      summary: Obtener área por ID
      description: Obtiene un área específica por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Área encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area encontrada correctamente"
                  area:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                        minLength: 5
                        maxLength: 45
                      descripcion:
                        type: string
                        minLength: 5
                        maxLength: 200
                      estado:
                        type: boolean
                      id_servicio:
                        type: integer
        '404':
          description: Área no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Area no encontrada"
        '409':
          description: Área desactivada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Area desactivada"

  /POST/areas:
    post:
      summary: Crear área
      description: Crea una nueva área en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - descripcion
                - id_servicio
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
                id_servicio:
                  type: integer
      responses:
        '201':
          description: Área creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area agregada correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /PUT/areas/{id}:
    put:
      summary: Actualizar área
      description: Actualiza un área existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
                id_servicio:
                  type: integer
      responses:
        '200':
          description: Área actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area actualizada correctamente."
        '404':
          description: Área no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Area no encontrada"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /PATCH/areas/{id}:
    patch:
      summary: Eliminar área
      description: Marca un área como eliminada (inactiva)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Área eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Area eliminada correctamente"
        '404':
          description: Área no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Area no encontrada"
        '400':
          description: Error en la operación
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /GET/empleados:
    get:
      summary: Obtener todos los empleados
      description: Obtiene una lista de todos los empleados activos en el sistema con sus asignaciones
      responses:
        '200':
          description: Lista de empleados obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleados activos encontrados correctamente"
                  empleados:
                    type: array
                    items:
                      type: object
                      properties:
                        empleado:
                          type: object
                          properties:
                            id:
                              type: integer
                            dpi:
                              type: string
                              pattern: "^[0-9]{13}$"
                            nombres:
                              type: string
                              minLength: 3
                              maxLength: 100
                            apellidos:
                              type: string
                              minLength: 3
                              maxLength: 100
                            telefono:
                              type: string
                              pattern: "^[0-9]{8}$"
                            direccion:
                              type: string
                              minLength: 3
                              maxLength: 255
                            nit:
                              type: string
                            genero:
                              type: boolean
                            id_jornada:
                              type: integer
                            email:
                              type: string
                              format: email
                              minLength: 3
                              maxLength: 100
                            usuario:
                              type: string
                            estado:
                              type: boolean
                        asignacion:
                          type: object
                          nullable: true
                          properties:
                            id_area:
                              type: integer
                            area:
                              type: string
                            id_rol:
                              type: integer
                            rol:
                              type: string
                            horas_semanales:
                              type: integer
        '404':
          description: No se encontraron empleados activos
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay empleados activos"

  /GET/empleados/bajas:
    get:
      summary: Obtener empleados anteriores
      description: Obtiene una lista de empleados que trabajaron previamente en la gasolinera (inactivos)
      responses:
        '200':
          description: Lista de empleados anteriores obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleados inactivos encontrados correctamente"
                  empleados:
                    type: array
                    items:
                      type: object
                      properties:
                        empleado:
                          type: object
                          properties:
                            id:
                              type: integer
                            dpi:
                              type: string
                            nombres:
                              type: string
                            apellidos:
                              type: string
                            telefono:
                              type: string
                            direccion:
                              type: string
                            nit:
                              type: string
                            genero:
                              type: boolean
                            id_jornada:
                              type: integer
                            email:
                              type: string
                            usuario:
                              type: string
                            estado:
                              type: boolean
                        asignacion:
                          type: object
                          nullable: true
                          properties:
                            id_area:
                              type: integer
                            area:
                              type: string
                            id_rol:
                              type: integer
                            rol:
                              type: string
                            horas_semanales:
                              type: integer
        '404':
          description: No se encontraron empleados anteriores
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay empleados inactivos"

  /GET/empleados/{id}:
    get:
      summary: Obtener empleado por ID
      description: Obtiene un empleado específico por su ID con su asignación
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Empleado encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado encontrado correctamente"
                  empleado:
                    type: object
                    properties:
                      id:
                        type: integer
                      dpi:
                        type: string
                        pattern: "^[0-9]{13}$"
                      nombres:
                        type: string
                        minLength: 3
                        maxLength: 100
                      apellidos:
                        type: string
                        minLength: 3
                        maxLength: 100
                      telefono:
                        type: string
                        pattern: "^[0-9]{8}$"
                      direccion:
                        type: string
                        minLength: 3
                        maxLength: 255
                      nit:
                        type: string
                      genero:
                        type: boolean
                      id_jornada:
                        type: integer
                      email:
                        type: string
                        format: email
                        minLength: 3
                        maxLength: 100
                      usuario:
                        type: string
                      estado:
                        type: boolean
                  asignacion:
                    type: object
                    nullable: true
                    properties:
                      id_area:
                        type: integer
                      area:
                        type: string
                      id_rol:
                        type: integer
                      rol:
                        type: string
                      horas_semanales:
                        type: integer
        '404':
          description: Empleado no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Empleado no encontrado"

  /POST/empleados:
    post:
      summary: Crear empleado
      description: Crea un nuevo empleado en el sistema con su asignación, generando automáticamente usuario y contraseña temporal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - empleado
                - asignacion
              properties:
                empleado:
                  type: object
                  required:
                    - dpi
                    - nombres
                    - apellidos
                    - telefono
                    - direccion
                    - nit
                    - genero
                    - id_jornada
                    - email
                  properties:
                    dpi:
                      type: string
                      pattern: "^[0-9]{13}$"
                    nombres:
                      type: string
                      minLength: 3
                      maxLength: 100
                    apellidos:
                      type: string
                      minLength: 3
                      maxLength: 100
                    telefono:
                      type: string
                      pattern: "^[0-9]{8}$"
                    direccion:
                      type: string
                      minLength: 3
                      maxLength: 255
                    nit:
                      type: string
                    genero:
                      type: boolean
                    id_jornada:
                      type: integer
                    email:
                      type: string
                      format: email
                      minLength: 3
                      maxLength: 100
                asignacion:
                  type: object
                  required:
                    - id_rol
                    - id_area
                    - horas_semanales
                  properties:
                    id_rol:
                      type: integer
                    id_area:
                      type: integer
                    horas_semanales:
                      type: integer
      responses:
        '201':
          description: Empleado creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado creado correctamente"
                  autenticacion:
                    type: object
                    properties:
                      usuario:
                        type: string
                        description: "Usuario generado automáticamente"
                        example: "juan.perez.1234"
                      contraseniaTemporal:
                        type: string
                        description: "Contraseña temporal generada aleatoriamente"
                        example: "aBcDeFgHiJ"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '409':
          description: Conflicto - datos duplicados
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "El DPI ya está registrado. El teléfono ya está registrado. El correo electrónico ya está registrado"

  /PUT/empleados/{id}:
    put:
      summary: Actualizar empleado
      description: Actualiza un empleado existente y/o su asignación
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                empleado:
                  type: object
                  properties:
                    dpi:
                      type: string
                      pattern: "^[0-9]{13}$"
                    nombres:
                      type: string
                      minLength: 3
                      maxLength: 100
                    apellidos:
                      type: string
                      minLength: 3
                      maxLength: 100
                    telefono:
                      type: string
                      pattern: "^[0-9]{8}$"
                    direccion:
                      type: string
                      minLength: 3
                      maxLength: 255
                    nit:
                      type: string
                    genero:
                      type: boolean
                    id_jornada:
                      type: integer
                    email:
                      type: string
                      format: email
                      minLength: 3
                      maxLength: 100
                asignacion:
                  type: object
                  properties:
                    id_rol:
                      type: integer
                    id_area:
                      type: integer
                    horas_semanales:
                      type: integer
              description: "Se debe proporcionar al menos empleado o asignacion"
      responses:
        '200':
          description: Empleado actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado actualizado correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '404':
          description: Empleado no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Empleado no encontrado"
        '409':
          description: Conflicto - datos duplicados
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string

  /PATCH/empleados/{id}:
    patch:
      summary: Eliminar empleado
      description: Marca un empleado como eliminado (inactivo) y desactiva sus asignaciones
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Empleado eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empleado eliminado correctamente"
        '404':
          description: Empleado no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Empleado no encontrado"
        '409':
          description: Empleado ya desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "El empleado ya está desactivado"

  /GET/ordenes:
    get:
      summary: Obtener todas las órdenes
      description: Obtiene una lista de todas las órdenes en el sistema
      responses:
        '200':
          description: Lista de órdenes obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ordenes activas encontradas correctamente"
                  ordenes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        id_servicio:
                          type: integer
                        id_estado_orden:
                          type: integer
                          minimum: 1
                          maximum: 4
                          description: "1: Confirmada, 2: En Proceso, 3: Entregada, 4: Cancelada"
                        id_proveedor:
                          type: integer
                        fecha_orden:
                          type: string
                          format: date-time
                        costo_total:
                          type: number
                          format: decimal
                          description: "Costo total calculado automáticamente"
        '404':
          description: No se encontraron órdenes
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay ordenes"

  /GET/ordenes/{id}:
    get:
      summary: Obtener orden por ID
      description: Obtiene una orden específica por su ID con todas sus relaciones y detalles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Orden encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Orden encontrada correctamente"
                  orden:
                    type: object
                    properties:
                      id:
                        type: integer
                      fecha_orden:
                        type: string
                        format: date-time
                      costo_total:
                        type: number
                        format: decimal
                      estado_orden:
                        type: object
                        properties:
                          id:
                            type: integer
                          nombre:
                            type: string
                          descripcion:
                            type: string
                      servicio:
                        type: object
                        properties:
                          id:
                            type: integer
                          nombre:
                            type: string
                      proveedor:
                        type: object
                        properties:
                          id:
                            type: integer
                          nombres:
                            type: string
                          apellidos:
                            type: string
                          telefono:
                            type: integer
                          nit:
                            type: string
                      orden_detalles:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            id_orden:
                              type: integer
                            id_producto:
                              type: integer
                            id_estado_detalle:
                              type: integer
                              description: "1: Completo, 2: Incompleto, 3: No recibido"
                            cantidad:
                              type: integer
                            precio_unitario:
                              type: number
        '404':
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Orden no encontrada"

  /POST/ordenes:
    post:
      summary: Crear orden
      description: Crea una nueva orden en el sistema con transacción automática. Calcula el costo total y establece estado inicial como Confirmada
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_servicio
                - id_proveedor
                - fecha_orden
                - detalles
              properties:
                id_servicio:
                  type: integer
                  description: "ID del servicio asociado"
                id_proveedor:
                  type: integer
                  description: "ID del proveedor"
                fecha_orden:
                  type: string
                  format: date
                  description: "Debe ser una fecha futura"
                detalles:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required:
                      - id_producto
                      - cantidad
                      - precio_unitario
                    properties:
                      id_producto:
                        type: integer
                      cantidad:
                        type: integer
                        minimum: 1
                      precio_unitario:
                        type: number
                        minimum: 0
      responses:
        '201':
          description: Orden creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Orden creada correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '500':
          description: Error interno durante la transacción
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string

  /PUT/ordenes/modificar_estado/{id}:
    put:
      summary: Actualizar estado de orden
      description: Actualiza el estado de una orden con validación de transiciones permitidas. Si pasa a Entregada, marca todos los detalles como Completo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - estado
              properties:
                estado:
                  type: integer
                  enum: [1, 2, 3, 4]
                  description: "1: Confirmada, 2: En Proceso, 3: Entregada, 4: Cancelada. Transiciones permitidas: 1→[2,4], 2→[3,4], 3→[], 4→[]"
      responses:
        '200':
          description: Estado de orden actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples:
                      normal: "Estado de orden actualizado correctamente"
                      entregada: "Estado de orden actualizado correctamente y detalles actualizados"
        '400':
          description: Error en la validación de transición
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    examples:
                      estado_invalido: "Estado de orden no válido"
                      transicion_invalida: "Transición de estado no permitida"
        '404':
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Orden no encontrada"

  /PUT/ordenes/detalle/{id}:
    put:
      summary: Actualizar estado de detalle de orden
      description: Actualiza el estado de un detalle específico de una orden. Solo disponible para órdenes en estado Entregada
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: "ID del detalle de orden"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - estado
              properties:
                estado:
                  type: integer
                  enum: [1, 2, 3]
                  description: "1: Completo, 2: Incompleto, 3: No recibido"
                cantidad:
                  type: integer
                  minimum: 1
                  description: "Requerido solo cuando estado es 2 (Incompleto)"
      responses:
        '200':
          description: Estado de detalle actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estado del detalle actualizado correctamente"
        '400':
          description: Error en la validación
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    examples:
                      orden_no_entregada: "Solo se pueden modificar detalles de órdenes entregadas"
                      estado_invalido: "Estado de detalle no válido. Estados permitidos: 1 (Completo), 2 (Incompleto), 3 (No recibido)"
                      cantidad_requerida: "Para marcar como incompleto, debe especificar la cantidad recibida"
        '404':
          description: Detalle de orden no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Detalle de orden no encontrado"

  /POST/ordenes/reabastecer/{id}:
    post:
      summary: Reabastecer orden
      description: Realiza el reabastecimiento de una orden específica enviando solicitud a servicios externos. Solo para órdenes Entregadas y productos no marcados como No recibidos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Solicitud de reabastecimiento procesada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Solicitud de reabastecimiento procesada"
                  reabastecimiento:
                    type: object
                    description: "Respuesta del servicio externo de reabastecimiento"
        '400':
          description: Error en la validación de reabastecimiento
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    examples:
                      estado_invalido: "Solo se pueden reabastecer órdenes en estado Entregada"
                      sin_productos: "No hay productos para reabastecer en esta orden"
                      sin_endpoint: "No hay endpoint de reabastecimiento configurado para el servicio"
        '404':
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Orden no encontrada"
        '502':
          description: Error en el servicio de reabastecimiento
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 502
                  error:
                    type: string
                    example: "Bad Gateway"
                  message:
                    type: string
                    example: "Error al procesar solicitud de reabastecimiento"

  /GET/alertas:
    get:
      summary: Obtener todas las alertas
      description: Obtiene una lista de todas las alertas activas en el sistema
      responses:
        '200':
          description: Lista de alertas obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alertas activas encontradas correctamente"
                  alertas:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre_producto:
                          type: string
                          minLength: 5
                          maxLength: 45
                        mensaje:
                          type: string
                          maxLength: 255
                          description: "Mensaje automático generado por el sistema"
                        id_servicio:
                          type: integer
                          description: "ID del servicio asociado (4: Gasolinera, 5: Tienda, 6: Repuestos, 7: Pintura)"
                        estado:
                          type: boolean
        '404':
          description: No se encontraron alertas activas
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay alertas activas"

  /GET/alertas/{id}:
    get:
      summary: Obtener alerta por ID
      description: Obtiene una alerta específica por su ID con información del servicio asociado
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alerta encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nombre_producto:
                    type: string
                    minLength: 5
                    maxLength: 45
                  mensaje:
                    type: string
                    maxLength: 255
                    description: "Mensaje automático generado por el sistema"
                  id_servicio:
                    type: integer
                  estado:
                    type: boolean
        '404':
          description: Alerta no encontrada o desactivada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    examples:
                      no_encontrada: "Alerta no encontrada"
                      desactivada: "Alerta desactivada"

  /POST/alertas/tienda_de_conveniencia:
    post:
      summary: Crear alerta de tienda de conveniencia
      description: Crea una nueva alerta para la tienda de conveniencia (servicio ID 5). El mensaje se genera automáticamente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre_producto
              properties:
                nombre_producto:
                  type: string
                  minLength: 5
                  maxLength: 45
                  description: "Nombre del producto con bajo stock"
                  example: "Coca Cola 600ml"
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta agregada correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /POST/alertas/gasolinera:
    post:
      summary: Crear alerta de gasolinera
      description: Crea una nueva alerta para la gasolinera (servicio ID 4). El mensaje se genera automáticamente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre_producto
              properties:
                nombre_producto:
                  type: string
                  minLength: 5
                  maxLength: 45
                  description: "Nombre del combustible con bajo stock"
                  example: "Gasolina Regular"
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta agregada correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /POST/alertas/repuestos:
    post:
      summary: Crear alerta de repuestos
      description: Crea una nueva alerta para el servicio de repuestos (servicio ID 6). El mensaje se genera automáticamente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre_producto
              properties:
                nombre_producto:
                  type: string
                  minLength: 5
                  maxLength: 45
                  description: "Nombre del repuesto con bajo stock"
                  example: "Filtro de aceite Honda Civic"
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta agregada correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /POST/alertas/pintura:
    post:
      summary: Crear alerta de servicio de pintura
      description: Crea una nueva alerta para el servicio de pintura (servicio ID 7). El mensaje se genera automáticamente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre_producto
              properties:
                nombre_producto:
                  type: string
                  minLength: 5
                  maxLength: 45
                  description: "Nombre del material de pintura con bajo stock"
                  example: "Pintura base blanca 1L"
      responses:
        '201':
          description: Alerta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta agregada correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /PATCH/alertas/{id}:
    patch:
      summary: Eliminar alerta
      description: Marca una alerta como eliminada (inactiva)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alerta eliminada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alerta desactivada correctamente"
        '404':
          description: Alerta no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Alerta no encontrada"

  /GET/movimientos:
    get:
      summary: Obtener todos los movimientos
      description: Obtiene una lista de todos los movimientos agrupados por tipo con datos externos incluidos de otros microservicios
      responses:
        '200':
          description: Movimientos encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  Pago de salarios:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                        description: "Total monetario de todos los pagos de salario"
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            concepto:
                              type: string
                              example: "Pago de salario para rol Cajero"
                            cantidad:
                              type: number
                              format: decimal
                            fecha_movimiento:
                              type: string
                              format: date
                            id_servicio:
                              type: integer
                            nombre_empleado:
                              type: string
                              example: "Juan Pérez García"
                  Compras:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                        description: "Total monetario de todas las compras"
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            concepto:
                              type: string
                              example: "Pago de orden 123"
                            cantidad:
                              type: number
                              format: decimal
                            fecha_movimiento:
                              type: string
                              format: date
                            id_servicio:
                              type: integer
                            id_producto:
                              type: integer
                              nullable: true
                              description: "ID del producto obtenido de detalles de orden"
                  Ventas:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                        description: "Total monetario de todas las ventas (datos externos)"
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: "Número de transacción"
                            concepto:
                              type: string
                              description: "Número de factura"
                            cantidad:
                              type: number
                              format: decimal
                              description: "Precio × Cantidad del producto"
                            fecha_movimiento:
                              type: string
                              format: date
                            id_servicio:
                              type: integer
                            producto:
                              type: string
                              description: "Nombre del producto vendido"
                  Devoluciones:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                        description: "Total monetario de todas las devoluciones (datos externos)"
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: "Número de devolución"
                            concepto:
                              type: string
                              example: "Devolución"
                            cantidad:
                              type: number
                              format: decimal
                              description: "Monto de la devolución"
                            fecha_movimiento:
                              type: string
                              format: date
                            NotaCredito:
                              type: string
                              description: "Nota de crédito asociada"

  /GET/movimientos/{id}:
    get:
      summary: Obtener movimiento por ID
      description: Obtiene un movimiento específico por su ID del sistema local
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movimiento encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movimiento encontrado"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      id_tipo_movimiento:
                        type: integer
                      id_servicio:
                        type: integer
                        nullable: true
                      concepto:
                        type: string
                        maxLength: 150
                      cantidad:
                        type: number
                        format: decimal
                      fecha_movimiento:
                        type: string
                        format: date
                      id_producto:
                        type: integer
                        nullable: true
                      nombre_producto:
                        type: string
                        maxLength: 45
                        nullable: true
                      nombre_empleado:
                        type: string
                        maxLength: 45
                        nullable: true
                      estado:
                        type: boolean
        '404':
          description: Movimiento no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Movimiento no encontrado"

  /GET/movimientos/diarios:
    get:
      summary: Obtener movimientos diarios
      description: Obtiene los movimientos de un día específico agrupados por tipo con datos externos incluidos
      parameters:
        - name: fecha_dia
          in: query
          required: true
          schema:
            type: string
            format: date
            example: "2024-01-15"
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
          description: "Filtrar por servicio específico"
      responses:
        '200':
          description: Movimientos diarios encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  Pago de salarios:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            concepto:
                              type: string
                            cantidad:
                              type: number
                            fecha_movimiento:
                              type: string
                              format: date
                            id_servicio:
                              type: integer
                            nombre_empleado:
                              type: string
                  Compras:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            concepto:
                              type: string
                            cantidad:
                              type: number
                            fecha_movimiento:
                              type: string
                              format: date
                            id_servicio:
                              type: integer
                            id_producto:
                              type: integer
                              nullable: true
                  Ventas:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            concepto:
                              type: string
                            cantidad:
                              type: number
                            fecha_movimiento:
                              type: string
                              format: date
                            id_servicio:
                              type: integer
                            producto:
                              type: string
                  Devoluciones:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            concepto:
                              type: string
                            cantidad:
                              type: number
                            fecha_movimiento:
                              type: string
                              format: date
                            NotaCredito:
                              type: string

  /GET/movimientos/mensuales:
    get:
      summary: Obtener movimientos mensuales
      description: Obtiene los movimientos de un mes específico agrupados por tipo con datos externos incluidos
      parameters:
        - name: fecha_mes
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
          description: "Número del mes (1-12)"
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
          description: "Año completo"
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
          description: "Filtrar por servicio específico"
      responses:
        '200':
          description: Movimientos mensuales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  Pago de salarios:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Compras:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Ventas:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Devoluciones:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object

  /GET/movimientos/trimestrales:
    get:
      summary: Obtener movimientos trimestrales
      description: Obtiene los movimientos de un trimestre específico agrupados por tipo con datos externos incluidos
      parameters:
        - name: numero_trimestre
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 4
          description: "Número del trimestre (1-4)"
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
          description: "Año completo"
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
          description: "Filtrar por servicio específico"
      responses:
        '200':
          description: Movimientos trimestrales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  Pago de salarios:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Compras:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Ventas:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Devoluciones:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object

  /GET/movimientos/semestrales:
    get:
      summary: Obtener movimientos semestrales
      description: Obtiene los movimientos de un semestre específico agrupados por tipo con datos externos incluidos
      parameters:
        - name: numero_semestre
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2
          description: "Número del semestre (1-2)"
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
          description: "Año completo"
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
          description: "Filtrar por servicio específico"
      responses:
        '200':
          description: Movimientos semestrales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  Pago de salarios:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Compras:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Ventas:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Devoluciones:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object

  /GET/movimientos/anuales:
    get:
      summary: Obtener movimientos anuales
      description: Obtiene los movimientos de un año específico agrupados por tipo con datos externos incluidos
      parameters:
        - name: año
          in: query
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2100
          description: "Año completo"
        - name: id_servicio
          in: query
          required: false
          schema:
            type: integer
          description: "Filtrar por servicio específico"
      responses:
        '200':
          description: Movimientos anuales encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  Pago de salarios:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Compras:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Ventas:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object
                  Devoluciones:
                    type: object
                    properties:
                      total_monetario:
                        type: number
                      movimientos:
                        type: array
                        items:
                          type: object

  /POST/pagar-salarios:
    post:
      summary: Pagar salarios
      description: Realiza el pago de salarios a empleados activos con asignaciones válidas. Genera movimientos automáticamente y evita duplicados por mes
      responses:
        '201':
          description: Salarios procesados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples:
                      pagados: "Salarios pagados e insertados como movimientos"
                      ya_pagados: "Ya se pagaron los salarios de este mes"
                  salarios:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        id_tipo_movimiento:
                          type: integer
                          example: 1
                          description: "Tipo movimiento: Pago de salarios"
                        id_servicio:
                          type: integer
                          description: "ID del servicio donde trabaja el empleado"
                        concepto:
                          type: string
                          example: "Pago de salario para rol Cajero"
                        cantidad:
                          type: number
                          format: decimal
                          description: "Salario del rol asignado"
                        fecha_movimiento:
                          type: string
                          format: date
                          description: "Fecha actual en formato ISO"
                        nombre_empleado:
                          type: string
                          example: "Juan Pérez García"
                        estado:
                          type: boolean
                          example: true
        '404':
          description: No hay empleados activos con asignaciones
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay empleados activos con rol asignado"

  /GET/tipo_movimientos:
    get:
      summary: Obtener todos los tipos de movimiento
      description: Obtiene una lista de todos los tipos de movimiento disponibles. Opcionalmente puede obtener uno específico usando query parameter id
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: integer
          description: "Si se proporciona, obtiene un tipo de movimiento específico en lugar de todos"
      responses:
        '200':
          description: Lista de tipos de movimiento obtenida exitosamente
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: "Respuesta cuando NO se proporciona query id (todos los tipos)"
                    properties:
                      message:
                        type: string
                        example: "Tipos de movimientos encontrados"
                      tipo_movimientos:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            nombre:
                              type: string
                              maxLength: 50
                            descripcion:
                              type: string
                              maxLength: 150
                            estado:
                              type: boolean
                  - type: object
                    description: "Respuesta cuando SÍ se proporciona query id (tipo específico)"
                    properties:
                      message:
                        type: string
                        example: "Tipo de movimiento encontrado correctamente"
                      tipo_movimiento:
                        type: object
                        properties:
                          id:
                            type: integer
                          nombre:
                            type: string
                            maxLength: 50
                          descripcion:
                            type: string
                            maxLength: 150
                          estado:
                            type: boolean
        '404':
          description: No se encontraron tipos de movimiento o tipo específico no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    examples:
                      no_encontrados: "No hay tipos de movimiento disponibles"
                      uno_no_encontrado: "Tipo de movimiento no encontrado"

  /GET/tipo_movimientos/{id}:
    get:
      summary: Obtener tipo de movimiento por ID
      description: Obtiene un tipo de movimiento específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tipo de movimiento encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tipo de movimiento encontrado correctamente"
                  tipo_movimiento:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                        maxLength: 50
                      descripcion:
                        type: string
                        maxLength: 150
                      estado:
                        type: boolean
        '404':
          description: Tipo de movimiento no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Tipo de movimiento no encontrado"

  /POST/tipo_movimientos:
    post:
      summary: Crear tipo de movimiento
      description: Crea un nuevo tipo de movimiento en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
              properties:
                nombre:
                  type: string
                  maxLength: 50
                  description: "Nombre único del tipo de movimiento"
                descripcion:
                  type: string
                  maxLength: 150
                  description: "Descripción opcional del tipo de movimiento"
                estado:
                  type: boolean
                  default: true
                  description: "Estado del tipo de movimiento"
      responses:
        '201':
          description: Tipo de movimiento creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tipo de movimiento creado correctamente"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                      descripcion:
                        type: string
                      estado:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    examples:
                      validation: "\"nombre\" is required"
                      duplicate: "Validation error"

  /PATCH/tipo_movimientos/{id}:
    patch:
      summary: Actualizar tipo de movimiento
      description: Actualiza un tipo de movimiento existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  maxLength: 50
                  description: "Nombre único del tipo de movimiento"
                descripcion:
                  type: string
                  maxLength: 150
                  description: "Descripción del tipo de movimiento"
                estado:
                  type: boolean
                  description: "Estado del tipo de movimiento"
              minProperties: 1
              description: "Se debe proporcionar al menos un campo para actualizar"
      responses:
        '200':
          description: Tipo de movimiento actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tipo de movimiento actualizado"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                      descripcion:
                        type: string
                      estado:
                        type: boolean
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '404':
          description: Tipo de movimiento no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Tipo de movimiento no encontrado"

  /DELETE/tipo_movimientos/{id}:
    delete:
      summary: Eliminar tipo de movimiento
      description: Elimina permanentemente un tipo de movimiento del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tipo de movimiento eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tipo de movimiento eliminado"
        '404':
          description: Tipo de movimiento no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Tipo de movimiento no encontrado"

  /post/login:
    post:
      summary: Iniciar sesión
      description: Autentica un usuario en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Inicio de sesión exitoso"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        type: object
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Credenciales inválidas"

  /post/cambiar-password:
    post:
      summary: Cambiar contraseña
      description: Permite a un usuario cambiar su contraseña actual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                  minLength: 6
                newPassword:
                  type: string
                  minLength: 6
      responses:
        '200':
          description: Contraseña cambiada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Contraseña actualizada correctamente"
        '401':
          description: Contraseña actual incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Contraseña actual incorrecta"

  /post/restablecer-password:
    post:
      summary: Restablecer contraseña
      description: Permite restablecer la contraseña de un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Solicitud de restablecimiento enviada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Se ha enviado un correo con las instrucciones"
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No se encontró un usuario con ese correo"

  /POST/asistencias:
    post:
      summary: Registrar entrada de empleado
      description: Registra la hora de entrada de un empleado. Valida que no exista una asistencia previa para la misma fecha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_empleado
                - fecha
                - hora_entrada
              properties:
                id_empleado:
                  type: integer
                  description: "ID del empleado"
                fecha:
                  type: string
                  format: date
                  description: "Fecha de la asistencia"
                hora_entrada:
                  type: string
                  pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                  example: "08:00:00"
                  description: "Hora de entrada en formato HH:mm:ss"
      responses:
        '201':
          description: Entrada registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Asistencia - Hora de entrada registrada correctamente"
        '400':
          description: Error en los datos de entrada o asistencia ya registrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    examples:
                      validation: "\"fecha\" is required"
                      duplicate: "La asistencia ya fue registrada para esta fecha"

  /PATCH/asistencias/salida:
    patch:
      summary: Registrar salida de empleado
      description: Registra la hora de salida de un empleado para una fecha específica. Valida que exista entrada previa y no haya salida registrada
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_empleado
                - fecha
                - hora_salida
              properties:
                id_empleado:
                  type: integer
                  description: "ID del empleado"
                fecha:
                  type: string
                  format: date
                  description: "Fecha de la asistencia"
                hora_salida:
                  type: string
                  pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                  example: "17:00:00"
                  description: "Hora de salida en formato HH:mm:ss"
      responses:
        '200':
          description: Salida registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Asistencia - Hora de salida registrada correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '404':
          description: No se encontró asistencia para el empleado en la fecha especificada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No se encontró una asistencia para el empleado con ID 123 en la fecha 2024-01-15"
        '409':
          description: La hora de salida ya fue registrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "La hora de salida ya fue registrada para esta asistencia"

  /GET/asistencias/empleado/{id}:
    get:
      summary: Obtener asistencias por empleado
      description: Obtiene el registro de asistencias de un empleado específico en un rango de fechas. Formatea las fechas y horas para presentación
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID del empleado
        - name: fecha_inicio
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha inicial del rango (requerida)
        - name: fecha_fin
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha final del rango (requerida)
      responses:
        '200':
          description: Asistencias encontradas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Asistencias encontradas correctamente"
                  asistencias:
                    type: array
                    items:
                      type: object
                      properties:
                        fecha:
                          type: string
                          format: date
                          example: "2024-01-15"
                          description: "Fecha formateada como YYYY-MM-DD"
                        hora_entrada:
                          type: string
                          example: "08:00:00"
                          description: "Hora de entrada"
                        hora_salida:
                          type: string
                          nullable: true
                          example: "17:00:00"
                          description: "Hora de salida (null si no se ha registrado)"
        '400':
          description: Error en los parámetros de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /GET/inasistencias/empleado/{id}:
    get:
      summary: Obtener inasistencias por empleado
      description: Obtiene el registro de inasistencias de un empleado específico usando consulta SQL especializada
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID del empleado
        - name: fecha_inicio
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha inicial del rango (requerida)
        - name: fecha_fin
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Fecha final del rango (requerida)
      responses:
        '200':
          description: Inasistencias encontradas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  no_inasistencias:
                    type: integer
                    example: 3
                    description: "Número total de inasistencias"
                  inasistencias:
                    type: array
                    items:
                      type: string
                      format: date
                      example: "2024-01-15"
                    description: "Array de fechas donde hubo inasistencias"
        '400':
          description: Error en los parámetros de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /GET/ordenes/estados_ordenes_detalles:
    get:
      summary: Obtener todos los estados de detalle
      description: Obtiene una lista de todos los estados posibles para los detalles de órdenes
      responses:
        '200':
          description: Lista de estados de detalle obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estados encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        descripcion:
                          type: string
        '404':
          description: No se encontraron estados de detalle
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay estados disponibles"

  /GET/ordenes/estados_ordenes:
    get:
      summary: Obtener todos los estados de orden
      description: Obtiene una lista de todos los estados posibles para las órdenes
      responses:
        '200':
          description: Lista de estados de orden obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estados encontrados correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        descripcion:
                          type: string
        '404':
          description: No se encontraron estados de orden
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay estados disponibles"

  /GET/servicios:
    get:
      summary: Obtener todos los servicios
      description: Obtiene una lista de todos los servicios activos en el sistema ordenados por ID
      responses:
        '200':
          description: Lista de servicios obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Servicios encontrados correctamente"
                  servicios:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          maxLength: 45
                        descripcion:
                          type: string
                          maxLength: 150
                        estado:
                          type: boolean
                          default: true
        '404':
          description: No se encontraron servicios
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay servicios disponibles"

  /GET/servicios/{id}:
    get:
      summary: Obtener servicio por ID
      description: Obtiene un servicio específico por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Servicio encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Servicio encontrado correctamente"
                  servicio:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                        maxLength: 45
                      descripcion:
                        type: string
                        maxLength: 150
                      estado:
                        type: boolean
        '404':
          description: Servicio no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Servicio no encontrado"

  /GET/roles:
    get:
      summary: Obtener todos los roles
      description: Obtiene una lista de todos los roles activos en el sistema ordenados por ID, excluyendo timestamps
      responses:
        '200':
          description: Lista de roles obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Roles activos encontrados correctamente"
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          minLength: 5
                          maxLength: 45
                        descripcion:
                          type: string
                          minLength: 5
                          maxLength: 200
                        salario:
                          type: integer
                          minimum: 0
                          maximum: 1000000
                        id_rol_superior:
                          type: integer
                          nullable: true
                          minimum: 1
                          maximum: 1000000
                        estado:
                          type: boolean
                          example: true
        '404':
          description: No se encontraron roles activos
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay roles activos"
        '400':
          description: Error en la consulta
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /GET/roles/{id}:
    get:
      summary: Obtener rol por ID
      description: Obtiene un rol específico por su ID. Valida que el rol exista y esté activo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rol encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol encontrado correctamente"
                  rol:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                        minLength: 5
                        maxLength: 45
                      descripcion:
                        type: string
                        minLength: 5
                        maxLength: 200
                      salario:
                        type: integer
                        minimum: 0
                        maximum: 1000000
                      id_rol_superior:
                        type: integer
                        nullable: true
                        minimum: 1
                        maximum: 1000000
                      estado:
                        type: boolean
                        example: true
        '400':
          description: Error en los parámetros de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '404':
          description: Rol no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Rol no encontrado"
        '409':
          description: Rol desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Rol desactivado"

  /POST/roles:
    post:
      summary: Crear rol
      description: Crea un nuevo rol en el sistema con validación de campos requeridos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - descripcion
                - salario
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                  description: "Nombre único del rol"
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
                  description: "Descripción del rol"
                salario:
                  type: integer
                  minimum: 0
                  maximum: 1000000
                  description: "Salario asociado al rol"
                id_rol_superior:
                  type: integer
                  minimum: 1
                  maximum: 1000000
                  description: "ID del rol superior (opcional)"
      responses:
        '201':
          description: Rol creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol creado correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /PUT/roles/{id}:
    put:
      summary: Actualizar rol
      description: Actualiza un rol existente. Valida que el rol exista y esté activo antes de actualizar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  minLength: 5
                  maxLength: 45
                  description: "Nombre del rol"
                descripcion:
                  type: string
                  minLength: 5
                  maxLength: 200
                  description: "Descripción del rol"
                salario:
                  type: integer
                  minimum: 0
                  maximum: 1000000
                  description: "Salario del rol"
                id_rol_superior:
                  type: integer
                  minimum: 1
                  maximum: 1000000
                  description: "ID del rol superior"
              description: "Todos los campos son opcionales. Se actualiza solo lo que se envíe"
      responses:
        '200':
          description: Rol actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol actualizado correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '404':
          description: Rol no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Rol no encontrado"
        '409':
          description: Rol desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Rol desactivado"

  /PATCH/roles/{id}:
    patch:
      summary: Eliminar rol
      description: Marca un rol como eliminado (soft delete). Valida que el rol exista y esté activo antes de eliminarlo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rol eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rol eliminado correctamente"
        '400':
          description: Error en los parámetros de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '404':
          description: Rol no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Rol no encontrado"
        '409':
          description: Rol ya desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Rol desactivado"

  /GET/jornadas:
    get:
      summary: Obtener todas las jornadas
      description: Obtiene una lista de todas las jornadas laborales disponibles
      responses:
        '200':
          description: Lista de jornadas obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jornadas encontradas correctamente"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                          minLength: 3
                          maxLength: 45
                        hora_inicio:
                          type: string
                          pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                        hora_fin:
                          type: string
                          pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
        '404':
          description: No se encontraron jornadas
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No hay jornadas disponibles"

  /POST/reembolsos:
    post:
      summary: Crear reembolso
      description: Crea un nuevo reembolso en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - concepto
                - cantidad
                - fecha_movimiento
                - id_servicio
              properties:
                concepto:
                  type: string
                  minLength: 5
                  maxLength: 150
                cantidad:
                  type: number
                  minimum: 0
                fecha_movimiento:
                  type: string
                  format: date-time
                id_servicio:
                  type: integer
      responses:
        '201':
          description: Reembolso creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reembolso creado correctamente"
                  data:
                    type: object

  /GET/proveedores:
    get:
      summary: Obtener todos los proveedores
      description: Obtiene una lista de todos los proveedores activos ordenados por ID
      responses:
        '200':
          description: Lista de proveedores obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedores activos encontrados correctamente"
                  proveedores:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombres:
                          type: string
                          minLength: 3
                          maxLength: 100
                        apellidos:
                          type: string
                          minLength: 3
                          maxLength: 100
                        telefono:
                          type: string
                          maxLength: 8
                          description: "Teléfono como string de máximo 8 caracteres"
                        nit:
                          type: string
                          maxLength: 15
                          description: "NIT como string de máximo 15 caracteres"
                        estado:
                          type: boolean
                          example: true
        '404':
          description: No se encontraron proveedores activos
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "No hay proveedores activos"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string

  /GET/proveedores/{id}:
    get:
      summary: Obtener proveedor por ID
      description: Obtiene un proveedor específico por su ID. Valida que el proveedor exista y esté activo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Proveedor encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor encontrado correctamente"
                  proveedor:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombres:
                        type: string
                        minLength: 3
                        maxLength: 100
                      apellidos:
                        type: string
                        minLength: 3
                        maxLength: 100
                      telefono:
                        type: string
                        maxLength: 8
                        description: "Teléfono como string de máximo 8 caracteres"
                      nit:
                        type: string
                        maxLength: 15
                        description: "NIT como string de máximo 15 caracteres"
                      estado:
                        type: boolean
                        example: true
        '404':
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Proveedor no encontrado"
        '409':
          description: Proveedor desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Proveedor desactivado"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string

  /POST/proveedores:
    post:
      summary: Crear proveedor
      description: Crea un nuevo proveedor en el sistema con validación de campos requeridos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombres
                - apellidos
                - telefono
                - nit
              properties:
                nombres:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: "Nombres del proveedor"
                apellidos:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: "Apellidos del proveedor"
                telefono:
                  type: integer
                  minimum: 10000000
                  maximum: 99999999
                  description: "Teléfono de 8 dígitos (se almacena como string)"
                nit:
                  type: string
                  minLength: 9
                  maxLength: 13
                  description: "NIT del proveedor (se almacena con máximo 15 caracteres)"
      responses:
        '201':
          description: Proveedor creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor registrado correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string

  /PUT/proveedores/{id}:
    put:
      summary: Actualizar proveedor
      description: Actualiza un proveedor existente con validación de campos opcionales
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombres:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: "Nombres del proveedor"
                apellidos:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: "Apellidos del proveedor"
                telefono:
                  type: integer
                  minimum: 10000000
                  maximum: 99999999
                  description: "Teléfono de 8 dígitos (se almacena como string)"
                nit:
                  type: string
                  minLength: 9
                  maxLength: 13
                  description: "NIT del proveedor (se almacena con máximo 15 caracteres)"
              description: "Todos los campos son opcionales. Se actualiza solo lo que se envíe"
      responses:
        '200':
          description: Proveedor actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor actualizado correctamente"
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string

  /PATCH/proveedores/{id}:
    patch:
      summary: Eliminar proveedor
      description: Marca un proveedor como eliminado (soft delete). Valida que el proveedor exista y esté activo antes de desactivarlo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Proveedor eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor desactivado correctamente"
        '404':
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Proveedor no encontrado"
        '409':
          description: Proveedor ya desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "El proveedor ya esta desactivado"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string

  /GET/jornadas/{id}:
    get:
      summary: Obtener jornada por ID
      description: Obtiene una jornada específica por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Jornada encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Jornada encontrada correctamente"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                        minLength: 3
                        maxLength: 45
                      hora_inicio:
                        type: string
                        pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                      hora_fin:
                        type: string
                        pattern: "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
        '404':
          description: Jornada no encontrada

